-- MySQL Script generated by MySQL Workbench
-- Mon May  1 17:15:47 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema movies
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema movies
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `movies` DEFAULT CHARACTER SET utf8 ;
USE `movies` ;

-- -----------------------------------------------------
-- Table `movies`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `e_mail` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies`.`genders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`genders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tag` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies`.`movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`movies` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `photo` LONGBLOB NULL,
  `year` DATE NOT NULL,
  `director` VARCHAR(255) NOT NULL,
  `actors` LONGTEXT NOT NULL,
  `user_id` INT NOT NULL,
  `genders_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_movies_user_idx` (`user_id` ASC),
  INDEX `fk_movies_genders1_idx` (`genders_id` ASC),
  CONSTRAINT `fk_movies_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `movies`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_genders1`
    FOREIGN KEY (`genders_id`)
    REFERENCES `movies`.`genders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies`.`user_has_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`user_has_comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comments_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_has_comments_comments1_idx` (`comments_id` ASC),
  INDEX `fk_user_has_comments_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_comments_comments1`
    FOREIGN KEY (`comments_id`)
    REFERENCES `movies`.`comments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_comments_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `movies`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies`.`user_has_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`user_has_roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `roles_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_has_roles_user1_idx` (`user_id` ASC),
  INDEX `fk_user_has_roles_roles1_idx` (`roles_id` ASC),
  CONSTRAINT `fk_user_has_roles_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `movies`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_roles_roles1`
    FOREIGN KEY (`roles_id`)
    REFERENCES `movies`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies`.`movies_has_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies`.`movies_has_comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `movies_id` INT NOT NULL,
  `comments_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_movies_has_comments_movies1_idx` (`movies_id` ASC),
  INDEX `fk_movies_has_comments_comments1_idx` (`comments_id` ASC),
  CONSTRAINT `fk_movies_has_comments_movies1`
    FOREIGN KEY (`movies_id`)
    REFERENCES `movies`.`movies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_has_comments_comments1`
    FOREIGN KEY (`comments_id`)
    REFERENCES `movies`.`comments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
